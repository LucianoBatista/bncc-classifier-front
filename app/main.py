import re
import streamlit as st
import streamlit.components.v1 as components
import requests
import json
import streamlit_modal as modal


st.write("# Classificador BNCC")

st.markdown(
    """
    --- 
    Este √© um MVP (Minimum Viable Product) resultado do trabalho do **Grupo de Educa√ß√£o**: 
    - üë¶ [Pedro](https://www.linkedin.com/in/pedromoreau/)
    - üëß [Brisa](https://www.linkedin.com/in/brisarosatti/)
    - üë¶ [Will](https://www.linkedin.com/in/wilson-font/)
    - üë¶ [Luciano](https://www.linkedin.com/in/lucianobatistads/).
    ---
    Nosso classificador recebe uma *quest√£o escrita* no campo abaixo e retorna a classifica√ß√£o da mesma dentro das seguintes categorias:
    
    ### √Årea do conhecimento

    - Matem√°tica, Arte, Biologia, Ci√™ncias, Educa√ß√£o F√≠sica, Ensino Religioso, F√≠sica, Geografia, Hist√≥ria, Ingl√™s, L√≠ngua Portuguesa e Qu√≠mica

    ### Grau de escolaridade

    - Ensino Fundamental I, Ensino Fundamental II, Ensino M√©dio
    ---
    """
)

message_text = st.text_input("üëá Digite aqui a sua quest√£o!")


def predict(text):
    headers = {
        "accept": "application/json",
    }

    params = {
        "item": text,
    }

    print("Preprocessing...")
    response = requests.get(
        "https://bncc-classifier.herokuapp.com/api/v1/model/classify/item",
        params=params,
        headers=headers,
    )

    return response


if message_text != "":

    counting_text_letters = len(message_text)

    if counting_text_letters > 10:

        prediction = st.button("Predict!")

        if prediction:
            response = predict(message_text)
            response_dict = json.loads(response.text)
            # st.write(json.loads(response.text))
            bncc_know_area = response_dict.get("bncc_know_area")
            grau_escolaridade = response_dict.get("school_phase")

            st.markdown(f"> **√Årea do Conhecimento**: {bncc_know_area[0]}")
            st.markdown(f"> **Grau de Escolaridade**: {grau_escolaridade[0]}")

    else:
        st.markdown(
            "**:warning:Desculpe, n√£o possui caracteres suficientes para realizar a predi√ß√£o.**"
        )
